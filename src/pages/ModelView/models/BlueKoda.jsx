/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useSelector } from "react-redux";

const MODEL_URL =
  "https://storage.googleapis.com/inceptivestudio/1669703138353.gltf";

export default function BlueKoda(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF(MODEL_URL);
  const { actions } = useAnimations(animations, group);

  const actionVal = useSelector((state) => state.action.name);
  useEffect(() => {
    if (actionVal) {
      var Mixer = actions[actionVal].getMixer();
      Mixer.stopAllAction();
      actions[actionVal].play();
    }
  }, [actionVal]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Blue_Koda" rotation={[Math.PI / 2, 0, 0]}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh
            name="Koda_33_Armours"
            frustumCulled={false}
            geometry={nodes.Koda_33_Armours.geometry}
            material={materials.Koda_33_Armours1}
            skeleton={nodes.Koda_33_Armours.skeleton}
            castShadow={true}
          />
          <skinnedMesh
            name="Koda_33_Body"
            frustumCulled={false}
            geometry={nodes.Koda_33_Body.geometry}
            material={materials.Koda_33_Body1}
            skeleton={nodes.Koda_33_Body.skeleton}
            castShadow={true}
          />
          <skinnedMesh
            name="Koda_33_Eyes"
            frustumCulled={false}
            geometry={nodes.Koda_33_Eyes.geometry}
            material={materials.Koda_33_Head1}
            skeleton={nodes.Koda_33_Eyes.skeleton}
            castShadow={true}
          />
          <skinnedMesh
            name="Koda_33_Head"
            frustumCulled={false}
            geometry={nodes.Koda_33_Head.geometry}
            material={materials.Koda_33_Head1}
            skeleton={nodes.Koda_33_Head.skeleton}
            castShadow={true}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(MODEL_URL);
