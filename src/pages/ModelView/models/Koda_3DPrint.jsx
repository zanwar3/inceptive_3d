/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.2 Koda3.gltf
*/

import React, { useRef, useEffect } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useSelector } from "react-redux";

export default function Koda_3DPrint(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF(
    "https://storage.googleapis.com/inceptivestudio/1672907560670.gltf"
  );

  const { actions } = useAnimations(animations, group);
  const actionVal = useSelector((state) => state.action.name);
  useEffect(() => {
    if (actionVal) {
      var Mixer = actions[actionVal].getMixer();
      Mixer.stopAllAction();
      actions[actionVal].play();
    }
  }, [actionVal]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="T-Pose" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.Character1_Hips} />
           <skinnedMesh frustumCulled={false} castShadow={true}
            name="koda_body_low"
            geometry={nodes.koda_body_low.geometry}
            material={materials["3D Print"]}
            skeleton={nodes.koda_body_low.skeleton}
          />
           <skinnedMesh frustumCulled={false} castShadow={true}
            name="koda_eyes_low"
            geometry={nodes.koda_eyes_low.geometry}
            material={materials["3D Print"]}
            skeleton={nodes.koda_eyes_low.skeleton}
          />
           <skinnedMesh frustumCulled={false} castShadow={true}
            name="koda_head_low"
            geometry={nodes.koda_head_low.geometry}
            material={materials["3D Print"]}
            skeleton={nodes.koda_head_low.skeleton}
          />
           <skinnedMesh frustumCulled={false} castShadow={true}
            name="Koda_New_Body_Attachements"
            geometry={nodes.Koda_New_Body_Attachements.geometry}
            material={materials["3D Print"]}
            skeleton={nodes.Koda_New_Body_Attachements.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(
  "https://storage.googleapis.com/inceptivestudio/1672907560670.gltf"
);
