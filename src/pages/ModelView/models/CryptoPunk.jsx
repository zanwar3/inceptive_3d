/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/


import React, { useRef, useEffect } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useSelector } from "react-redux";

export default function CryptoPunk(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF(
    "https://storage.googleapis.com/inceptivestudio/1671625070056.gltf"
  );
  const { actions } = useAnimations(animations, group);

  const actionVal = useSelector((state) => state.action.name);
  console.log(actions);
  useEffect(() => {
    if (actionVal) {
      var Mixer = actions[actionVal].getMixer();
      Mixer.stopAllAction();
      actions[actionVal].play();
    }
  }, [actionVal]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="CP_2172">
          <primitive object={nodes.hips} />
          <skinnedMesh castShadow={true} name="Cube002" geometry={nodes.Cube002.geometry} material={materials['Material.004']} skeleton={nodes.Cube002.skeleton} />
          <skinnedMesh castShadow={true} name="Mouth(copy)bakedbakedbaked001(copy)bakedbakedbaked" geometry={nodes['Mouth(copy)bakedbakedbaked001(copy)bakedbakedbaked'].geometry} material={materials['BLACK.002']} skeleton={nodes['Mouth(copy)bakedbakedbaked001(copy)bakedbakedbaked'].skeleton} />
          <group name="Plane002(copy)bakedbakedbaked">
            <skinnedMesh castShadow={true} name="Plane002(copy)bakedbakedbaked_1" geometry={nodes['Plane002(copy)bakedbakedbaked_1'].geometry} material={materials['sample_1_Smooth 3.001']} skeleton={nodes['Plane002(copy)bakedbakedbaked_1'].skeleton} />
            <skinnedMesh castShadow={true} name="Plane002(copy)bakedbakedbaked_2" geometry={nodes['Plane002(copy)bakedbakedbaked_2'].geometry} material={materials['sample_1_Smooth 1.001']} skeleton={nodes['Plane002(copy)bakedbakedbaked_2'].skeleton} />
            <skinnedMesh castShadow={true} name="Plane002(copy)bakedbakedbaked_3" geometry={nodes['Plane002(copy)bakedbakedbaked_3'].geometry} material={materials['sample_1_Smooth 2.001']} skeleton={nodes['Plane002(copy)bakedbakedbaked_3'].skeleton} />
          </group>
          <group name="Plane003">
            <skinnedMesh castShadow={true} name="Plane003bakedbakedbaked" geometry={nodes.Plane003bakedbakedbaked.geometry} material={materials['sample_1_Smooth 7.001']} skeleton={nodes.Plane003bakedbakedbaked.skeleton} />
            <skinnedMesh castShadow={true} name="Plane003bakedbakedbaked_1" geometry={nodes.Plane003bakedbakedbaked_1.geometry} material={materials['Material.003']} skeleton={nodes.Plane003bakedbakedbaked_1.skeleton} />
          </group>
          <group name="Plane004">
            <skinnedMesh castShadow={true} name="Plane004bakedbakedbaked" geometry={nodes.Plane004bakedbakedbaked.geometry} material={materials['sample_1_Smooth 5.001']} skeleton={nodes.Plane004bakedbakedbaked.skeleton} />
            <skinnedMesh castShadow={true} name="Plane004bakedbakedbaked_1" geometry={nodes.Plane004bakedbakedbaked_1.geometry} material={materials['sample_1_Smooth 6.001']} skeleton={nodes.Plane004bakedbakedbaked_1.skeleton} />
          </group>
          <skinnedMesh castShadow={true} name="Plane005" geometry={nodes.Plane005.geometry} material={materials['Skin.001']} skeleton={nodes.Plane005.skeleton} />
          <skinnedMesh castShadow={true} name="Plane006" geometry={nodes.Plane006.geometry} material={materials['LBS Outline Material.001']} skeleton={nodes.Plane006.skeleton} />
          <skinnedMesh castShadow={true} name="Plane007" geometry={nodes.Plane007.geometry} material={materials['LBS Outline Material.001']} skeleton={nodes.Plane007.skeleton} />
          <skinnedMesh castShadow={true} name="Plane009" geometry={nodes.Plane009.geometry} material={materials['LBS Outline Material.001']} skeleton={nodes.Plane009.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('https://storage.googleapis.com/inceptivestudio/1671625070056.gltf')
